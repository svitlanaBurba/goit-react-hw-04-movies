{"version":3,"sources":["lib/getImgOrDefault.js","components/moviesList/MoviesListStyled.js","components/moviesList/MoviesList.js","pages/moviesPage/MoviesPageStyled.js","lib/parseQueryString.js","pages/moviesPage/MoviesPage.js"],"names":["getImgOrDefault","imgSrc","MoviesListContainer","styled","ul","withRouter","movies","location","map","id","poster_path","title","to","pathname","state","from","src","alt","SearchbarHeader","header","SearchForm","form","parseQueryString","query","queryStr","URLSearchParams","Object","fromEntries","entries","MoviesPage","searchTerm","handleSearch","a","props","search","axios","get","response","setState","data","results","console","log","handleChange","evt","target","value","handleSubmit","preventDefault","history","push","this","prevProps","prevState","onSubmit","type","className","autoComplete","autoFocus","placeholder","onChange","MoviesList","Component"],"mappings":"mGAKeA,IALS,SAAAC,GAAM,OAC5BA,EAAM,wCAC+BA,GACjC,6B,gFCDOC,E,MAAsBC,EAAOC,GAAV,6R,gCCFhC,yCAkBeC,iBAdI,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SAC3B,OACE,cAAC,IAAD,UACGD,EAAOE,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,YAAaC,EAAnB,EAAmBA,MAAnB,OACV,6BACE,cAAC,IAAD,CAAMC,GAAI,CAACC,SAAS,WAAD,OAAaJ,GAAMK,MAAO,CAACC,KAAMR,IAApD,SACE,qBAAKS,IAAKhB,YAAgBU,GAAcO,IAAKN,OAFxCF,Y,gJCNJS,EAAkBf,IAAOgB,OAAV,iiBAmBfC,EAAajB,IAAOkB,KAAV,opCChBRC,EALU,WAAiB,IAAhBC,EAAe,uDAAP,GAC1BC,EAAW,IAAIC,gBAAgBF,GACrC,OAAOG,OAAOC,YAAYH,EAASI,Y,eCI/BC,E,4MACJf,MAAQ,CAACgB,WAAY,GAAIxB,OAAQ,I,EAkBjCyB,a,sBAAe,gCAAAC,EAAA,6DACNzB,EAAY,EAAK0B,MAAjB1B,SACDgB,EAAQD,EAAiBf,EAAS2B,QAAQX,MAFnC,SAGUY,IAAMC,IAAN,mGACuEb,EADvE,+CAHV,OAGPc,EAHO,OAOb,EAAKC,SAAS,CAAChC,OAAQ+B,EAASE,KAAKC,UACrCC,QAAQC,IAAI,EAAK5B,OARJ,2C,EAWf6B,aAAe,SAAAC,GACb,EAAKN,SAAS,CAACR,WAAYc,EAAIC,OAAOC,S,EAGxCC,aAAe,SAAAH,GACbA,EAAII,iBACc,EAAKf,MAAhBgB,QACCC,KAAR,wBAA8B,EAAKpC,MAAMgB,c,uDAlC3C,WACuBR,EAAiB6B,KAAKlB,MAAM1B,SAAS2B,QAAQX,OAEhE4B,KAAKpB,iB,gCAIT,SAAmBqB,EAAWC,GACd/B,EAAiB8B,EAAU7C,SAAS2B,QAAQX,QACrCD,EAAiB6B,KAAKlB,MAAM1B,SAAS2B,QAAQX,OAGhE4B,KAAKpB,iB,oBAyBT,WACE,OACE,qCACE,cAACb,EAAD,UACE,eAACE,EAAD,CAAYkC,SAAUH,KAAKJ,aAA3B,UACE,wBAAQQ,KAAK,SAASC,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAEF,uBACEA,UAAU,mBACVD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAAUT,KAAKR,aACfG,MAAOK,KAAKrC,MAAMgB,kBAIxB,cAAC+B,EAAA,EAAD,CAAYvD,OAAQ6C,KAAKrC,MAAMR,gB,GA3DdwD,aAiEVjC","file":"static/js/movies-page.85691fb1.chunk.js","sourcesContent":["const getImgOrDefault = imgSrc =>\r\n  imgSrc\r\n    ? `http://image.tmdb.org/t/p/w300${imgSrc}`\r\n    : '../../images/default.png';\r\n\r\nexport default getImgOrDefault;\r\n","import styled from 'styled-components';\r\n\r\nexport const MoviesListContainer = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import {Link, withRouter} from 'react-router-dom';\r\nimport getImgOrDefault from '../../lib/getImgOrDefault';\r\nimport {MoviesListContainer} from './MoviesListStyled';\r\n\r\nconst MoviesList = ({movies, location}) => {\r\n  return (\r\n    <MoviesListContainer>\r\n      {movies.map(({id, poster_path, title}) => (\r\n        <li key={id}>\r\n          <Link to={{pathname: `/movies/${id}`, state: {from: location}}}>\r\n            <img src={getImgOrDefault(poster_path)} alt={title}></img>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </MoviesListContainer>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchbarHeader = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background: rgba(139, 187, 229, 0.3);\r\n  background-image: linear-gradient(to top, rgba(139, 187, 229, 0.5), #166494);\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n\r\n  .SearchForm-button {\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n  }\r\n\r\n  .SearchForm-button:hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  .SearchForm-button-label {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n  }\r\n\r\n  .SearchForm-input {\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n  }\r\n\r\n  .SearchForm-input::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","const parseQueryString = (query = {}) => {\r\n  const queryStr = new URLSearchParams(query);\r\n  return Object.fromEntries(queryStr.entries());\r\n};\r\n\r\nexport default parseQueryString;\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {SearchbarHeader, SearchForm} from './MoviesPageStyled';\r\nimport parseQueryString from '../../lib/parseQueryString';\r\nimport MoviesList from '../../components/moviesList/MoviesList';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {searchTerm: '', movies: []};\r\n\r\n  componentDidMount() {\r\n    const currentQuery = parseQueryString(this.props.location.search).query;\r\n    if (currentQuery) {\r\n      this.handleSearch();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const query = parseQueryString(prevProps.location.search).query;\r\n    const currentQuery = parseQueryString(this.props.location.search).query;\r\n\r\n    if (query !== currentQuery) {\r\n      this.handleSearch();\r\n    }\r\n  }\r\n\r\n  handleSearch = async () => {\r\n    const {location} = this.props;\r\n    const query = parseQueryString(location.search).query;\r\n    const response = await axios.get(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=ea85f2b4fc5ff28c9522c59f4ba43c3d&query=${query}&language=en-US&page=1&include_adult=false`\r\n    );\r\n\r\n    this.setState({movies: response.data.results});\r\n    console.log(this.state);\r\n  };\r\n\r\n  handleChange = evt => {\r\n    this.setState({searchTerm: evt.target.value});\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const {history} = this.props;\r\n    history.push(`/movies?query=${this.state.searchTerm}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchbarHeader>\r\n          <SearchForm onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n            <input\r\n              className=\"SearchForm-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search movies\"\r\n              onChange={this.handleChange}\r\n              value={this.state.searchTerm}\r\n            />\r\n          </SearchForm>\r\n        </SearchbarHeader>\r\n        <MoviesList movies={this.state.movies} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}